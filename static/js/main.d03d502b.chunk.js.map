{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/smartbrain-logo.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","onSubmitRegister","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","top_row","right_col","bottom_row","left_col","displayFaceBox","console","log","count","Object","assign","catch","err","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d03d502b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n    if (isSignedIn) {\n    return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>    \n            <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'> Sign Out </p> \n        </nav>\n        );\n    } else {\n    return (\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>    \n            <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'> Sign In </p>  \n            <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'> Register </p>\n        </nav> \n        );\n        }\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    fetch(\"http://localhost:3000/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword,\n      }),\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br2 b--black-10 mv4 w-100 w-50-m w-30-l center shadow-1\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"register\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n    };\n  }\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitRegister = () => {\n    fetch(\"http://localhost:3000/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name,\n      }),\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    //const { onRouteChange } = this.props;\n    return (\n      <article className=\"br2 b--black-10 mv4 w-100 w-50-m w-30-l center shadow-1\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange}\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange}\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitRegister}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/smartbrain-logo.7cea1ac9.png\";","\nimport React from \"react\";\nimport Tilt from \"react-parallax-tilt\";\nimport './Logo.css';\nimport brain from './smartbrain-logo.png';\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0\">\n      <Tilt\n        className=\"Tilt\"\n        options={{ max: 55 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className=\"Tilt-inner\"> <img src={brain} alt=\"\" /> </div>\n      </Tilt>\n    </div>\n  );\n};\n\n\nexport default Logo;\n\n\n\n\n","import React from \"react\";\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n        <p className='f3 ma3 white'>\n            {'This Magic Brain will detect faces in your picture. Give it a try!'}\n        </p>\n        <div className='center'>\n            <div className='pa3 br3 shadow-5 form-container'>\n          <input className='f4 pa2 w-70' type='text' onChange={onInputChange} />\n          <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit} >Detect</button>\n        </div>\n        </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nconst Rank = ({name, entries}) => {\n  return (\n    <div>\n      <div className=\"white f3\">{`${name}, your current rank is...`}</div>\n      <div className=\"white f2\">{entries}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from 'react';\nimport './faceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n    return (\n        <div className='center ma'>\n            <div className='absolute mt2 mb3 mr2 ml2'>\n                <img id=\"inputImage\"src={ imageUrl } alt='' width=\"500px\" height=\"auto\" />\n                <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>   \n                </div>\n                </div>\n            </div>\n    )\n}\n\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n//import Particles from \"react-particles-js\";\nimport \"./App.css\";\n\n\n\n// const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 80,\n//       density: {\n//         enable: true,\n//         value_area: 600\n//         }\n//       }\n//     }\n//   }\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n}\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n\n  loadUser = (data) => {\n    this.setState( {user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n      leftCol: clarifaiFace.left_col * width\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n          fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n        input: this.state.input\n    })\n  })\n  .then(response => response.json())\n    .then(response => {\n      if (response) {\n      fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n        id: this.state.user.id\n    })\n  })\n  .then(response => response.json())\n  .then(count => {\n    this.setState(Object.assign(this.state.user, {entries:count}))\n  })\n  .catch(console.log)\n}\n  this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n    .catch(err => console.log(err));\n    }\n\n  onRouteChange = ( route ) => {\n    if (route === 'signout') {\n      this.setState({initialState})\n      this.setState({route: 'singin'})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n      {/* <Particles className=\"particles\" params={particlesOptions} /> */}\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route === 'home' \n      ? <div>\n\n      <Logo />\n      <Rank name={this.state.user.name} entries={this.state.user.entries} />\n      <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n      <FaceRecognition box={box} imageUrl={imageUrl}/>\n      </div>\n      : (\n        route === 'signin'\n      ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n      )\n      }\n    </div>\n  )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render( \n  <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}